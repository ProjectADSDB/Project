# -*- coding: utf-8 -*-
"""FileSeparation.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1tTwUoO8CCITWBVVxsvTwmd_yymVir1_Q
"""

from google.colab import drive
drive.mount('/content/drive')

import os
import pandas as pd
import numpy as np

TEMPORAL_PATH = "/content/drive/MyDrive/ADSDB/landing/temporal"
PERSISTENT_PATH = "/content/drive/MyDrive/ADSDB/landing/persistent"

INFLATION_FILENAME = "inflation_rate"
EMPLOYMENT_FILENAME = "employment_rate"
HPI_FILENAME = "house_price_index"
HPI_WEIGHTS_FILENAME = "house_price_index_weights"

CSV_FORMAT = ".csv"

YEAR_RANGE = range(2008, 2023)

for year in YEAR_RANGE:
  os.mkdir(f'{PERSISTENT_PATH}/{year}')

def convert_period_to_year_quarter(df):
    # Extract year and quarter
    df['Year'] = df['Periodo'].str.extract(r'(\d{4})').astype(int)
    df['Quarter'] = df['Periodo'].str.extract(r'Q([IVX]+)')
    df = df.drop(columns=['Periodo'])

    # Replace Roman numerals with corresponding Arabic numerals
    roman_numerals = { 'I': 1, 'II': 2, 'III': 3, 'IV': 4 }
    df['Quarter'] = df['Quarter'].map(roman_numerals).astype(int)

    return df

def save_separated_csvs(df, filename):
  for year in YEAR_RANGE:
    temp_df = df[df['year'] == year]
    temp_df.to_csv(f'{PERSISTENT_PATH}/{year}/{filename}_{year}{CSV_FORMAT}', index=False)

def clean_column_names(df):
    # Clean column names
    df.columns = df.columns.str.strip().str.lower().str.replace(' ', '_')

    # Remove columns with empty names
    empty_columns = df.columns[df.columns == '']
    df = df.drop(empty_columns, axis=1)

    return df

employment_df = pd.read_csv(f'{TEMPORAL_PATH}/{EMPLOYMENT_FILENAME}{CSV_FORMAT}', sep=';')
employment_df = convert_period_to_year_quarter(employment_df)
employment_df = clean_column_names(employment_df)
save_separated_csvs(employment_df, EMPLOYMENT_FILENAME)
employment_df

house_index_df = pd.read_csv(f'{TEMPORAL_PATH}/{HPI_FILENAME}{CSV_FORMAT}', sep=';')
house_index_df = convert_period_to_year_quarter(house_index_df)
house_index_df = clean_column_names(house_index_df)
save_separated_csvs(house_index_df, HPI_FILENAME)
house_index_df

inflation_df = pd.read_csv(f'{TEMPORAL_PATH}/{INFLATION_FILENAME}{CSV_FORMAT}', sep=';')
inflation_df = inflation_df.rename(columns={' Inflation Rate (%)': 'inflation_rate_percent', ' Annual Change': 'annual_change'})
inflation_df['date'] = inflation_df['date'].str.extract(r'(\d{4})').astype(int)
inflation_df = inflation_df.rename(columns={'date': 'Year'})
inflation_df = clean_column_names(inflation_df)
save_separated_csvs(inflation_df, INFLATION_FILENAME)
inflation_df

weightings_df = pd.read_csv(f'{TEMPORAL_PATH}/{HPI_WEIGHTS_FILENAME}{CSV_FORMAT}', sep=';')
weightings_df = weightings_df.rename(columns={'Periodo': 'Year'})
weightings_df = clean_column_names(weightings_df)
save_separated_csvs(weightings_df, HPI_WEIGHTS_FILENAME)
weightings_df

